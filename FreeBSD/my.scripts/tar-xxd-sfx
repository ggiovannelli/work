#!/bin/sh
# -----------------------------------------------------------------------------
# ver. 20250515144600
# Uno strumento per archiviare, crittografare e codificare file e directory
# -----------------------------------------------------------------------------

# Informazioni sulla versione
VERSION="20250515144600"

# Definizione della funzione di aiuto
helpFunction() {
    echo
    echo "UTILIZZO: $0 [-y] [-e openssl|crypt] [-k chiave | -j] [-b xxd|b64|uue] [-w 56] [-d \"descrizione\"] file1 file2 ..."
    echo
    echo "OPZIONI:"
    echo "  -y         Chiedi conferma durante l'estrazione"
    echo "  -e tipo    Algoritmo di crittografia: openssl (default) o crypt"
    echo "  -k chiave  Specifica la chiave di crittografia"
    echo "  -j         Richiedi la chiave interattivamente"
    echo "  -b tipo    Formato di codifica: xxd (default), b64 (base64) o uue (uuencode)"
    echo "  -w num     Numero di ottetti per riga (default: 56)"
    echo "  -d testo   Descrizione del pacchetto"
    echo "  -l         Modalità legacy (non usa gli switch pP, estrae percorsi relativi)"
    echo "  -h         Mostra questo messaggio di aiuto"
    echo
    echo "ESEMPI:"
    echo "  $0 -j /root /etc/ssh/sshd_config"
    echo "      Archivia entrambi i percorsi, cripta con openssl"
    echo
    echo "  $0 -j -e crypt /root /etc/ssh/sshd_config"
    echo "      Archivia entrambi i percorsi, cripta con crypt/enigma"
    echo
    echo "  $0 -k \"my b35t P4ssw0rd\" /root"
    echo "      Archivia /root, cripta con openssl e chiave da riga di comando"
    echo
    echo "  $0 /root /etc/ssh/sshd_config"
    echo "      Archivia entrambi i percorsi, NESSUNA crittografia"
    echo
    echo "  $0 -y /root /etc/ssh/sshd_config"
    echo "      Come sopra ma chiede conferma prima di scrivere"
    echo
    echo "  $0 -b b64 -w 40 /root"
    echo "      Archivia /root, NESSUNA crittografia, codifica base64, 80 colonne"
    echo
    exit 1
}

# Funzione per leggere la chiave di crittografia
readKey() {
    echo
    read -p "Inserisci la chiave: " KEY
    echo
    KEY="\"${KEY}\" |"
}

# Inizializzazione dei valori predefiniti
SAFE=""
KEY=""
DESC=""
WIDTH=56
TARC="cpPf"
TARD="zxPpvf"
HEX="xxd"
HEXC="xxd -p -c "
HEXD="xxd -p -r "
ENC=""
CRYPT=""
DECRYPT=""

# Elaborazione dei parametri
while getopts "hyjle:k:w:d:b:" flag; do
    case "${flag}" in
        y)  SAFE="w" ;;
        k)  KEY="${OPTARG}"
            KEY="\"${KEY}\" |" ;;
        e)  ENC="${OPTARG}"
            if [ "${ENC}" == "crypt" ]; then
                CRYPT="crypt"
                DECRYPT="crypt |"
            else
                ENC="openssl"
                CRYPT="openssl enc -e -base64 -aes-128-ctr -nosalt -pbkdf2 -k"
                DECRYPT="openssl enc -d -base64 -aes-128-ctr -nosalt -pbkdf2 |"
                echo "- Crittografia impostata su openssl (default)"
            fi ;;
        j)  readKey ;;
        w)  WIDTH="${OPTARG}" ;;
        d)  DESC="${OPTARG}" ;;
        b)  HEX="${OPTARG}"
            case "${HEX}" in
                b64) HEXC="base64 -w"
                     HEXD="base64 -d" ;;
                uue) HEXC="uuencode -m archive.tgz"
                     HEXD="uudecode -o /dev/stdout" ;;
                xxd|*) HEX="xxd"
                     HEXC="xxd -p -c "
                     HEXD="xxd -p -r "
                     echo "- Formato di codifica impostato su xxd (default)" ;;
            esac ;;
        l)  TARC="cf"
            TARD="zxvf" ;;
        h|?) helpFunction ;;
    esac
done

# Aggiustamento degli indici dei parametri
shift $((OPTIND-1))

# Verifica che sia stato specificato almeno un file
if [ $# -lt 1 ]; then
    echo "Errore: è necessario specificare almeno un file o directory da archiviare."
    helpFunction
fi

# Gestione della descrizione
if [ -n "${DESC}" ]; then
    DESC=\'"${DESC}"\'
fi

# Aggiustamento della larghezza per diversi formati di codifica
case ${HEX} in
    "b64") WIDTH=$((WIDTH * 2)) ;;
    "uue") WIDTH="" ;;
esac

# Configurazione della crittografia se è stata specificata una chiave ma non un algoritmo
if [ -n "${KEY}" ] && [ -z "${ENC}" ]; then
    ENC="openssl"
    CRYPT="openssl enc -e -base64 -aes-128-ctr -nosalt -pbkdf2 -k"
    DECRYPT="openssl enc -d -base64 -aes-128-ctr -nosalt -pbkdf2 |"
fi

# Richiedi la chiave se è stato specificato un algoritmo ma non una chiave
if [ -z "${KEY}" ] && [ -n "${ENC}" ]; then
    readKey
fi

# Mostra intestazione con informazioni sull'esecuzione
echo "# $(date '+%Y.%m.%d-%H:%M:%S') $(hostname) ${DESC} $@"

# Costruzione e esecuzione del comando
CMD="( tar -${TARC} - $@ | gzip -9 | ${CRYPT} ${KEY} ${HEXC} ${WIDTH} ) 2>/dev/null | awk -v SAFE=${SAFE} 'BEGIN {printf(\"( ${HEXD} | ${DECRYPT} tar -%s${TARD} - ) <<EOF\\n\"), SAFE} {print} END { printf(\"EOF\\n\")}'"

eval ${CMD}
