#!/bin/sh
# tar-xxd-sfx-dual - Aligned with tiny version

# Check parameters
if [ $# -eq 0 ] || [ "$1" = "-h" ]; then
    echo "Usage: $0 [-u|-w|-d] files..."
    echo "  -u  Unix/Linux output (default)"
    echo "  -w  Windows output (with xxd)"
    echo "  -d  Dual platform output"
    exit 0
fi

# Check for xxd
if ! command -v xxd >/dev/null 2>&1; then
    echo "Error: xxd not found. Please install xxd."
    exit 1
fi

# Set defaults
T="unix"
WIDTH="56"
TARC="cpPf"    # Same as tiny
TARD="zxPvf"   # For Unix output

# Check for options
case "$1" in
    -u) T="unix"; shift ;;
    -w) T="windows"; shift ;;
    -d) T="dual"; shift ;;
esac

# Show header
echo ": $(date '+%Y.%m.%d-%H:%M:%S') $(hostname) $@"
echo

# Output based on type
if [ "$T" != "windows" ]; then
    echo ": For Unix/Linux:"
    # Use exact same command as tiny
    CMD="( tar -${TARC} - $@ | gzip -9 | xxd -p -c ${WIDTH} ) 2>/dev/null | awk 'BEGIN {printf(\"( xxd -p -r | tar -${TARD} - ) <<EOF\\n\")} {print} END { printf(\"EOF\\n\")}'"
    eval ${CMD}
fi

[ "$T" = "dual" ] && echo && echo

if [ "$T" != "unix" ]; then
    echo ": For Windows with xxd:"
    # For Windows, use cpf without P
    echo "echo $(tar -cpf - "$@" 2>/dev/null | gzip -9 | xxd -p -c 9999) | xxd -p -r | tar -zxvf -"
fi
